generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model DiscountMetafieldRule {
  id                 Int               @id @default(autoincrement())
  shop               String            @default("unknown") // Store identifier for multi-store support
  discountId         String            // Unique within a shop
  discountType       String
  discountTitle      String
  metafieldNamespace String
  metafieldKey       String
  metafieldValue     String    @db.Text
  isActive           Boolean           @default(true)
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  discountValue      String?
  discountValueType  String?
  status             String            @default("ACTIVE")
  startDate          DateTime?
  endDate            DateTime?
  productsCount      Int               @default(0)
  lastRan            DateTime?

  // Relationship to ProductDiscount
  productDiscounts   ProductDiscount[]

  @@unique([shop, discountId]) // Ensure discountId is unique per shop
  @@map("discount_metafield_rules")
}

model Product {
  id                Int       @id @default(autoincrement())
  shop              String    @default("unknown") // Store identifier for multi-store support
  shopifyId         String    @default("unknown") // Shopify product ID (e.g., "8579006202034")
  title             String
  handle            String
  description       String?
  productType       String?
  vendor            String?
  status            String    @default("ACTIVE")
  variantsCount     Int       @default(0)
  imagesCount       Int       @default(0)
  tags              String?   @db.Text // JSON array of tags
  activeDiscounts   String?   @db.Text // The active discounts metafield data (kept for backward compatibility)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  lastFetchedAt     DateTime  @default(now())

  // Relationship to ProductDiscount
  productDiscounts  ProductDiscount[]

  @@unique([shop, shopifyId]) // Ensure Shopify product ID is unique per shop
  @@map("products")
}

model ProductDiscount {
  id          Int      @id @default(autoincrement())
  productId   Int      // Foreign key to Product
  discountId  Int      // Foreign key to DiscountMetafieldRule
  shop        String   @default("unknown") // For multi-store support
  isActive    Boolean  @default(true)      // Whether this relationship is active
  createdAt   DateTime @default(now())     // When the relationship was created
  updatedAt   DateTime @updatedAt          // When it was last updated
  
  // Relationships
  product     Product              @relation(fields: [productId], references: [id], onDelete: Cascade)
  discount    DiscountMetafieldRule @relation(fields: [discountId], references: [id], onDelete: Cascade)
  
  // Ensure a product can't have the same discount twice
  @@unique([productId, discountId])
  // Index for efficient querying
  @@index([shop, isActive])
  @@map("product_discounts")
}
